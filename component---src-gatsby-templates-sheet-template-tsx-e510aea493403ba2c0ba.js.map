{"version":3,"sources":["webpack:///./src/web/providers/DisqusScript.tsx","webpack:///./src/web/components/CommentsAreaSummary.tsx","webpack:///./src/web/components/CommentsSection.tsx","webpack:///./src/web/components/CommentsArea.tsx","webpack:///./src/web/components/IntroContent.tsx","webpack:///./src/web/components/MainHeading.tsx","webpack:///./src/web/components/MiniMarkdown.tsx","webpack:///./src/web/components/PreFooter.tsx","webpack:///./src/web-search/SearchBox.tsx","webpack:///./src/web/components/HomeButton.tsx","webpack:///./src/web/components/SearchFooterSection.tsx","webpack:///./src/web/components/SearchFooter.tsx","webpack:///./src/web/components/SheetTemplateView.tsx","webpack:///./src/gatsby-templates/SheetTemplate.tsx","webpack:///./src/web/containers/Layout.tsx","webpack:///./src/web/components/CommonHead.tsx","webpack:///./src/web/lib/site_page.tsx","webpack:///./src/web/components/PostContent/index.tsx","webpack:///./src/web/components/PostContent/isotopify.tsx","webpack:///./src/web/components/PostContent/prism.tsx","webpack:///./src/rehype-wrapify/lib/helpers/hast.js","webpack:///./src/rehype-wrapify/index.js","webpack:///./src/web/components/PostContent/transform.tsx"],"names":["debug","debugjs","DisqusScript","_React$Component","apply","this","arguments","inheritsLoose_default","_proto","prototype","componentDidMount","_this$props","props","host","url","identifier","setTimeout","window","disqus_config","page","s","document","createElement","src","setAttribute","parent","head","body","appendChild","injectEmbed","id","async","injectCount","injectScript","render","_this$props2","children","data","rprops","thread","react_default","a","count","className","data-disqus-identifier","data-disqus-url","Fragment","React","JSON","stringify","Component","CommentsAreaSummary","_ref","CSS","root","cn","icon","isLine","dangerouslySetInnerHTML","__html","talkBubblesLine","isSolid","talkBubblesSolid","suffix","fauxlink","CommentsSection","CommentsAreaView","data-js-no-preview","container","details","components_CommentsAreaSummary","components_CommentsSection","CommentsArea","providers_DisqusScript","CommentsArea_CommentsAreaView","IntroContent","MainHeading","title","markdownish","source","replace","_","label","str","paragraphify","split","map","para","join","MiniMarkdown","PreFooter","SearchBox","isSmall","prefix","sep","LiveSearchInput","placeholder","searchLine","HomeButton","gatsby_browser_entry","to","homeLine","SearchFooterSection","search","action","method","web_search_SearchBox","links","components_HomeButton","SearchFooter","components_SearchFooterSection","SheetTemplateView","content","useSiteContent","ctx","useSheetContext","sheet","frontmatter","path","pageCount","htmlAst","relatedPages","topPages","labels","sheetSuffix","intro","Helmet_default","CommonHead","TopNav","back","components_MainHeading","components_IntroContent","components_MiniMarkdown","PostContent","Object","assign","components_PreFooter","components_CommentsArea","components_SearchFooter","RelatedPostsArea","category","__webpack_require__","d","__webpack_exports__","SheetTemplate_useSheetContext","query","SheetContext","createContext","useAssigns","nodePath","pageContext","toSiteLinks","markdownRemark","allPages","totalCount","useContext","SheetTemplate","assigns","Provider","value","Layout","components_SheetTemplateView","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","meta","name","rel","href","pages","edges","toSiteLink","edge","node","context","groupByCategory","groups","groupBy","keys","reduce","result","group","_Object$assign","memo","transform","react__WEBPACK_IMPORTED_MODULE_3___default","role","ref","doPostTransform","element","log","bind","Promise","resolve","then","isotopify","loadPrism","global","Prism","highlightAllUnder","catch","error","el","div","lists","querySelectorAll","Array","from","forEach","isotopifyItem","iso","require","itemSelector","transitionDuration","images","image","addEventListener","layout","PRISM_VERSION","LANGUAGE_ALIASES","coffee","dockerfile","dosini","jade","js","make","md","rb","sh","tsx","vimscript","yml","zsh","LANGUAGE_IGNORE","nohighlight","html","urls","languageURLs","pres","pre","find","match","filter","Boolean","sort","index","self","indexOf","getLanguagesInElement","lang","getPrismURL","getLanguageURL","concat","getPrismURLs","all","loadjs","before","removeAttribute","success","err","loadScript","noop","loadScripts","file","updateLast","list","fn","length","slice","item","rehype_wrapify","wrapify","tagName","sectionClass","bodyClass","wrapH2","section","_temp","_ref$tagName","_ref$sectionClass","_ref$bodyClass","extraClass","properties","getClassName","wrapper","last","type","separatify","decorate","renderAst","RehypeReact","Compiler"],"mappings":"iLAoBMA,QAAQC,GAAQ,oBA0DPC,EApDf,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAAC,KAAAC,YAAAD,KAAAE,IAAAL,EAAAC,GAAA,IAAAK,EAAAN,EAAAO,UAAA,OAAAD,EACEE,kBAAA,WAAoB,IAAAC,EACgBN,KAAKO,MAA/BC,EADUF,EACVE,KAAMC,EADIH,EACJG,IAAKC,EADDJ,EACCI,WACnBf,EAAM,wCAAyCc,GAE/CE,WAAW,WAETC,OAAOC,cAAgB,WACrBlB,EAAM,6CAENK,KAAKc,KAAKL,IAAMA,EAEhBT,KAAKc,KAAKJ,WAAaA,GAiDxB,SAAsBF,GAC3Bb,EAAM,4BAA6Ba,GAK9B,SAAqBA,GAC1B,IAAMO,EAAIC,SAASC,cAAc,UACjCF,EAAEG,IAAF,WAAmBV,EAAnB,YACAO,EAAEI,aAAa,iBAAf,kBACA,IAAMC,EAASJ,SAASK,MAAQL,SAASM,KACrCF,GAAQA,EAAOG,YAAYR,GAT/BS,CAAYhB,GAYP,SAAqBA,GAC1B,IAAMO,EAAIC,SAASC,cAAc,UACjCF,EAAEG,IAAF,WAAmBV,EAAnB,YACAO,EAAEU,GAAK,gBACPV,EAAEW,OAAQ,EACV,IAAMN,EAASJ,SAASK,MAAQL,SAASM,KACrCF,GAAQA,EAAOG,YAAYR,GAjB/BY,CAAYnB,GAjDRoB,CAAapB,IAvBE,MAQrBL,EAmBE0B,OAAA,WAAS,IAAAC,EACqC9B,KAAKO,MAAzCC,EADDsB,EACCtB,KAAMC,EADPqB,EACOrB,IAAKC,EADZoB,EACYpB,WAAYqB,EADxBD,EACwBC,SACzBC,EAAO,CAAExB,OAAMC,MAAKC,cAGpBuB,EAAsB,CAC1BC,OAAQC,EAAAC,EAAAnB,cAAA,OAAKQ,GAAG,kBAChBY,MACEF,EAAAC,EAAAnB,cAAA,QACEqB,UAAU,uBACVC,yBAAwB7B,EACxB8B,kBAAiB/B,GAHnB,aAWJ,OACE0B,EAAAC,EAAAnB,cAACkB,EAAAC,EAAMK,SAAP,KAEGC,IAAMzB,cAAc,WAAY,CAAEe,KAAMW,KAAKC,UAAUZ,KACnC,mBAAbD,EAA0BA,EAASE,GAAU,OA1C7DpC,EAAA,CAAkC6C,IAAMG,8ECGzBC,EAhBoB,SAAAC,GAAA,IAAGV,EAAHU,EAAGV,MAAH,OACjCF,EAAAC,EAAAnB,cAAA,WAASqB,UAAWU,IAAIC,MACtBd,EAAAC,EAAAnB,cAAA,KACEqB,UAAWY,IAAGF,IAAIG,KAAMH,IAAII,QAC5BC,wBAAyB,CAAEC,OAAQC,OAErCpB,EAAAC,EAAAnB,cAAA,KACEqB,UAAWY,IAAGF,IAAIG,KAAMH,IAAIQ,SAC5BH,wBAAyB,CAAEC,OAAQG,OAErCtB,EAAAC,EAAAnB,cAAA,UAAQqB,UAAWU,IAAIX,OAAQA,GAAgB,IAC/CF,EAAAC,EAAAnB,cAAA,QAAMqB,UAAWU,IAAIU,QAArB,wBAAyD,IACzDvB,EAAAC,EAAAnB,cAAA,QAAMqB,UAAWU,IAAIW,UAArB,kBCVWC,EATS,SAAAb,GAAuB,IAApBb,EAAoBa,EAApBb,OACzB,OACEC,EAAAC,EAAAnB,cAAA,OAAKqB,UAAU,oBAEbH,EAAAC,EAAAnB,cAAA,OAAKqB,UAAU,YAAYJ,KCOpB2B,EAAmB,SAACtD,GACLA,EAAlB2B,OAD4C,IACpCG,EAAU9B,EAAV8B,MAEhB,OACEF,EAAAC,EAAAnB,cAAA,WAASqB,UAAWU,IAAIC,KAAMxB,GAAG,WAAWqC,sBAAA,GAC1C3B,EAAAC,EAAAnB,cAAA,OAAKqB,UAAWU,IAAIe,WAClB5B,EAAAC,EAAAnB,cAAA,WAASqB,UAAWU,IAAIgB,SACtB7B,EAAAC,EAAAnB,cAACgD,EAAD,CAAqB5B,MAAOA,IAC5BF,EAAAC,EAAAnB,cAACiD,EAAoB3D,OAgChB4D,EArBa,WAQ1B,OACEhC,EAAAC,EAAAnB,cAACmD,EAPwB,CACzB5D,KAAM,sBACNC,IAAK,4BACLC,WAAY,SAKT,SAAAqC,GAAoC,IAAjCb,EAAiCa,EAAjCb,OAAQG,EAAyBU,EAAzBV,MACV,OAAOF,EAAAC,EAAAnB,cAACoD,EAAqB,CAAEnC,SAAQG,wCC1BhCiC,EARa,SAAAvB,GAAA,IAAGhB,EAAHgB,EAAGhB,SAAUO,EAAbS,EAAaT,UAAb,OAC1BH,EAAAC,EAAAnB,cAAA,OAAKqB,UAAWY,IAAGF,IAAIC,KAAMX,IAAaP,ICO7BwC,EAVK,SAAAxB,GAAA,IAAGyB,EAAHzB,EAAGyB,MAAOd,EAAVX,EAAUW,OAAV,OAClBvB,EAAAC,EAAAnB,cAAA,UAAQqB,UAAU,wBAChBH,EAAAC,EAAAnB,cAAA,MAAIqB,UAAU,MACXkC,EADH,IACUrC,EAAAC,EAAAnB,cAAA,UAAKyC,IAGfvB,EAAAC,EAAAnB,cAAA,OAAKqB,UAAU,wBCaZ,SAASmC,EAAYC,GAC1B,OACEA,EAEGC,QACC,WACA,SAACC,EAAGC,GAAJ,eAA+BJ,EAAYI,GAA3C,YAGDF,QACC,iBACA,SAACC,EAAGC,GAAJ,iBAAiCJ,EAAYI,GAA7C,cAGDF,QACC,yBACA,SAACC,EAAGC,EAAepE,GAAnB,kBA2BGqE,EA1BYrE,EA2BdkC,KAAKC,UAAUkC,IA5BhB,IACuBL,EAAYI,GADnC,OA2BR,IAAWC,IAZJ,SAASC,EAAaL,GAC3B,OAAOA,EACJM,MAAM,QACNC,IAAI,SAAAC,GAAI,YAAUA,EAAV,SACRC,KAAK,IAYKC,MA/Da,SAAArC,GAAA,IAAG2B,EAAH3B,EAAG2B,OAAH,OAC1BvC,EAAAC,EAAAnB,cAAA,QACEqB,UAAU,gBACVe,wBAAyB,CAAEC,OAAQyB,EAAaN,EAAYC,mCCJjDW,EANU,kBACvBlD,EAAAC,EAAAnB,cAAA,OAAKqB,UAAWU,IAAIC,MAClBd,EAAAC,EAAAnB,cAAA,KAAGqB,UAAWU,IAAIG,uECaPmC,EAhBG,WAChB,OACEnD,EAAAC,EAAAnB,cAAA,SAAOqB,UAAWY,IAAGF,IAAIC,KAAMD,IAAIuC,UACjCpD,EAAAC,EAAAnB,cAAA,QAAMqB,UAAWU,IAAIwC,QAArB,eACArD,EAAAC,EAAAnB,cAAA,QAAMqB,UAAWU,IAAIyC,KAArB,KAEAtD,EAAAC,EAAAnB,cAACyE,EAAA,EAAD,CAAiBC,YAAY,4BAE7BxD,EAAAC,EAAAnB,cAAA,KACEqB,UAAWU,IAAIG,KACfE,wBAAyB,CAAEC,OAAQsC,oCCG5BC,EAVW,kBACxB1D,EAAAC,EAAAnB,cAAC6E,EAAA,EAAD,CAAMxD,UAAWU,IAAIC,KAAM8C,GAAG,KAC5B5D,EAAAC,EAAAnB,cAAA,KAAGqB,UAAWU,IAAIG,KAAME,wBAAyB,CAAEC,OAAQ0C,2BCQhDC,EAda,kBAC1B9D,EAAAC,EAAAnB,cAAA,WAASqB,UAAWU,IAAIC,MACtBd,EAAAC,EAAAnB,cAAA,OAAKqB,UAAWU,IAAIkD,QAClB/D,EAAAC,EAAAnB,cAAA,QAAMkF,OAAO,IAAIC,OAAO,OACtBjE,EAAAC,EAAAnB,cAACoF,EAAD,QAIJlE,EAAAC,EAAAnB,cAAA,OAAKqB,UAAWU,IAAIsD,OAClBnE,EAAAC,EAAAnB,cAACsF,EAAD,SCESC,EARM,kBACnBrE,EAAAC,EAAAnB,cAAA,SAAOqB,UAAWU,IAAIC,KAAMa,sBAAA,GAC1B3B,EAAAC,EAAAnB,cAAA,OAAKqB,UAAWU,IAAIe,WAClB5B,EAAAC,EAAAnB,cAACwF,EAAD,kBCyESC,EA/DkB,WAC/B,IAAMC,EAAUC,cACVC,EAAMC,KACZ,IAAKD,EAAK,OAAO,KAHoB,IAK7BE,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,YACPC,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,UACNC,EAAYJ,EAAZI,QAGAC,EAA2BP,EAA3BO,aAAcC,EAAaR,EAAbQ,SAGhB7C,EAAQuC,EAAMvC,OAAS,GAGvB8C,EAAS,CAAEC,YAAaZ,EAAQI,MAAMrD,QAGtC8D,EAAQR,GAAeA,EAAYQ,MAEzC,OACErF,EAAAC,EAAAnB,cAAAkB,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAnB,cAACwG,EAAArF,EAAD,KACED,EAAAC,EAAAnB,cAAA,aAAWuD,EAAX,IAAoB8C,EAAOC,cAI7BpF,EAAAC,EAAAnB,cAACyG,EAAA,EAAD,MACAvF,EAAAC,EAAAnB,cAAC0G,EAAA,EAAD,CAAQC,MAAI,EAACpD,MAAOA,EAAOyC,KAAMA,IAEjC9E,EAAAC,EAAAnB,cAAA,OAAKqB,UAAU,aACbH,EAAAC,EAAAnB,cAAC4G,EAAD,CAAarD,MAAOA,EAAOd,OAAQ4D,EAAOC,cAGzCC,EACCrF,EAAAC,EAAAnB,cAAC6G,EAAD,CAAcxF,UAAU,gBACtBH,EAAAC,EAAAnB,cAAC8G,EAAD,CAAcrD,OAAQ8C,KAEtB,KAGJrF,EAAAC,EAAAnB,cAAC+G,EAAA,EAADC,OAAAC,OAAA,CAAa5F,UAAU,6BAAgC,CAAE6E,cAI3DhF,EAAAC,EAAAnB,cAACkH,EAAD,MACAhG,EAAAC,EAAAnB,cAACmH,EAAD,MAGAjG,EAAAC,EAAAnB,cAACoH,EAAD,MACAlG,EAAAC,EAAAnB,cAACqH,EAAA,EACK,CACFpB,YACAE,eACAC,WACAkB,SAAUvB,EAAYuB,gCC5EhCC,EAAAC,EAAAC,EAAA,oCAAAC,KAAAH,EAAAC,EAAAC,EAAA,0BAAAE,KAuCA,IAAMC,GAAenG,IAAMoG,cAAkC,MAkBvDC,GAAa,SAACxI,GAElB,IAAMyB,EAAOzB,EAAMyB,KAGbgH,EAAWzI,EAAM0I,YAAYD,SAG7B5B,EAA2B8B,aAAYlH,EAAKoF,cAC5CC,EAAuB6B,aAAYlH,EAAKqF,UAGxCL,EAAchF,EAAKmH,eAAenC,YASxC,MAAO,CACLD,MAPmB,CACnBE,KAAM+B,EACNxE,MAAOwC,EAAYxC,MACnB2C,QAASnF,EAAKmH,eAAehC,SAK7BH,cACAK,WACAD,eACAH,KAAM+B,EACN9B,UAAWlF,EAAKoH,SAASC,aAIvBvC,GAAkB,WACtB,OAAOwC,qBAAWT,KAUPD,IANEW,UAhDO,SAAChJ,GACrB,IAAMiJ,EAAUT,GAAWxI,GAE3B,OACE4B,EAAAC,EAAAnB,cAAC4H,GAAaY,SAAd,CAAuBC,MAAOF,GAC5BrH,EAAAC,EAAAnB,cAAC0I,EAAA,EAAD,KACExH,EAAAC,EAAAnB,cAAC2I,EAAD,SAgDU,gDCpGlB,IAAAC,EAAArB,EAAA,GAAAsB,EAAAtB,EAAAuB,EAAAF,GAAAG,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAAuB,EAAAC,GA+BeL,IAhBf,SAAA5G,GAAqC,IAAnBhB,EAAmBgB,EAAnBhB,SAChB,OACE+H,EAAA1H,EAAAnB,cAAA6I,EAAA1H,EAAAK,SAAA,KACEqH,EAAA1H,EAAAnB,cAACgJ,EAAA7H,EAAD,CACEoC,MAAM,cACN0F,KAAM,CAEJ,CAAEC,KAAM,cAAexD,QAAS,UAChC,CAAEwD,KAAM,WAAYxD,QAAS,wBAGhC5E,sCC1BP,IAAA8H,EAAArB,EAAA,GAAAsB,EAAAtB,EAAAuB,EAAAF,GAAAG,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAAuB,EAAAC,GAAAxB,EAAA,KAiBed,IATW,kBACxBoC,EAAA1H,EAAAnB,cAACgJ,EAAA7H,EAAD,KACE0H,EAAA1H,EAAAnB,cAAA,QACEmJ,IAAI,aACJC,KAAK,6MCAJ,SAASnB,EAAYoB,GAC1B,OAAKA,GAAUA,EAAMC,MAEdD,EAAMC,MAAMtF,IAAIuF,GAFY,GAS9B,SAASA,EAAWC,GACzB,MAAO,CACLxD,KAAMwD,EAAKC,KAAKC,QAAQ3B,SACxBxE,MAAOiG,EAAKC,KAAKC,QAAQnG,OAQtB,SAASoG,EAAgBxB,GAC9B,IAAMyB,EAAwCC,IAC5C1B,EAASmB,MACT,SAACE,GAAD,OAAoBA,EAAKC,KAAKC,QAAQpC,WAGxC,OAAON,OAAO8C,KAAKF,GAAQG,OAAO,SAACC,EAAQC,GAAkB,IAAAC,EACrDZ,EAAQM,EAAOK,GACrB,OAAAjD,OAAAC,OAAA,GAAY+C,IAAZE,EAAA,IAAqBD,GAAQX,EAAMtF,IAAIuF,GAAvCW,KACC,iICpCCxL,EAAQC,IAAQ,mBAiBhBoI,GAAcoD,EAdP1I,IAAM0I,MAcM,SAAC7K,GAAiB,IACjC4G,EAAuB5G,EAAvB4G,QAAS7E,EAAc/B,EAAd+B,UACXqE,EAAU0E,YAAUlE,GAE1B,OACEmE,EAAAlJ,EAAAnB,cAAA,OAAKqB,UAAWA,EAAWiJ,KAAK,OAAOC,IAAKC,GACzC9E,KAYP,SAAS8E,EAAgBC,GACvB,IAAMC,EAAMhM,EAAMiM,KAAK,KAAM,qBAG7B,OAFAD,EAAI,aAAcD,GAEXG,QAAQC,UACZC,KAAK,WACJ,OAAKL,GAILC,EAAI,oBACJK,YAAUN,GAEHO,YAAUP,IALRQ,EAAOC,QAOjBJ,KAAK,SAACI,GACDT,IACFC,EAAI,0BACJQ,EAAMC,kBAAkBV,MAG3BW,MAAM,SAACC,GACNX,EAAI,uBAAwBW,KA7BnBtE,wGC9BA,SAASgE,EAAUO,GAChC,GAAKA,GAAOA,EAAGxK,UAGO,oBAAXnB,OAAX,CAGA,IAAM4L,EAAMD,EAAGxK,SAAS,GACxB,GAAKyK,EAAL,CAGA,IAAMC,EAAQD,EAAIE,iBAA8B,oBAChDC,MAAMC,KAAKH,GAAOI,QAAQC,KAO5B,SAASA,EAAcP,GAErB,IAEMQ,EAAM,IAFIC,EAAQ,KAEZ,CAAYT,EAAI,CAC1BU,aAAc,cACdC,mBAAoB,IAGhBC,EAASZ,EAAGG,iBAAiB,OAEnCC,MAAMC,KAAKO,GAAQN,QAAQ,SAAAO,GACzBA,EAAMC,iBAAiB,OAAQ,WAC7BN,EAAIO,aAOR1M,OAAOyM,iBAAiB,OAAQ,WAC9BN,EAAIO,2NCzCF3N,EAAQC,IAAQ,aAeT2N,EAAgB,SAOhBC,EAA6C,CACxDC,OAAQ,eACRC,WAAY,SACZC,OAAQ,MACRC,KAAM,MACNC,GAAI,aACJC,KAAM,WACNC,GAAI,WACJC,GAAI,OACJC,GAAI,OACJC,IAAK,MACLC,UAAW,MACXC,IAAK,OACLC,IAAK,QAOMC,EAA8C,CACzDC,aAAa,EACbC,MAAM,GAcD,SAASvC,EAAUM,GACxB,OAAOV,QAAQC,UACZC,KAAK,WACJ,IAAM0C,EAgBL,SAAsBlC,GAC3B,IACMmC,EAwFD,SAA+BnC,GAEpC,IAAKA,EACH,MAAO,GAGT,IAAMoC,EAAOpC,EAAGG,iBAA8B,wBA2B9C,OAvBaC,MAAMC,KAAK+B,GAAM1J,IAAI,SAAC2J,GAAD,OAChCjC,MAAMC,KAAKgC,EAAItM,UAAU0C,MAAM,MAAM6J,KACnC,SAAC3L,GAAD,QAAkBA,EAAG4L,MAAM,kBAKPC,OAAOC,SAI5B/J,IAAI,SAAC/B,GAAD,OAAgBA,EAAGyB,QAAQ,aAAc,MAG7CM,IAAI,SAAC/B,GAAD,OAAgBsK,EAAiBtK,IAAOA,IAG5C+L,OACAF,OAAO,SAACrF,EAAOwF,EAAOC,GAAf,OAAwBA,EAAKC,QAAQ1F,KAAWwF,IAGvDH,OAAO,SAAC7L,GAAD,OAAiBoL,EAAgBpL,KAxHzBmM,CAAsB9C,GACTtH,IAAI,SAACqK,GAAD,OAwD9B,SAAwBA,GAC7B,OAAOC,EAAW,oBAAqBD,EAArB,WAzDmCE,CAAeF,KAEpE,SAAAG,OAEMvD,EAAOC,MAAQ,GAAK,CAACoD,KAF3B,CAGEA,EAAY,sDACZA,EAAY,wDACTb,GAzBYgB,CAAanD,GAE1B,OADA5M,EAAM,6BAA8B8O,GAgCnC,SAAqBA,GAC1B,OAAO5C,QAAQ8D,IAAIlB,EAAKxJ,IAAI,SAACxE,GAAD,OAOvB,SAAoBA,GACzB,OAAO,IAAIoL,QAAQ,SAAAC,GACjB8D,IAAOnP,EAAK,CAEVoP,OAAQ,SAAC5I,EAAcsF,GAErBA,EAAGpL,aAAa,cAAe,IAG/BoL,EAAGpL,aAAa,QAAS,IACzBoL,EAAGuD,gBAAgB,UAErBC,QAAS,WACPjE,KAEFQ,MAAO,SAAC0D,GAGNrQ,EAAM,sBAAuBqQ,GAC7BlE,SA1BuCmE,CAAWxP,MAAOsL,KAAKmE,GAhCzDC,CAAY1B,KAEpB1C,KAAK,WAEJ,OAAOG,EAAOC,QAmFb,SAASoD,EAAYa,GAC1B,YADiE,IAAvCA,MAAe,gBACzC,wCAA+C7C,EAA/C,IAAgE6C,EA2DlE,SAASF,2ICpKF,SAASG,EACdC,EACAC,GAEA,GAAoB,IAAhBD,EAAKE,OACP,MAAO,GAET,IAAMnP,EAA2BiP,EAAKG,MAAM,EAAGH,EAAKE,OAAS,GACvDE,EAAuBJ,EAAKA,EAAKE,OAAS,GAChD,SAAAf,OAAWpO,EAAX,CAAiBkP,EAAGG,KC9CP,IAAAC,EAAA,SAAS1N,GDqDjB,IACLyH,EACA6F,EAEMxO,EChDN,OARAkB,EAeK,SAAgBA,GACrB,OAAO2N,EAAQ3N,EAAM,CACnB4N,QAAS,KACTC,aAAc,CAAC,cACfC,UAAW,CAAC,OAAQ,qBAnBfC,CAAO/N,GDsDdsN,ECpD4B,SAAAxO,GAAQ,OACjCA,GAAY,IAAIkD,IAAI,SAAAgM,GAAO,ODuB9BV,ECtB6B,SAAAjP,GAAI,OAwB1BsP,EAxBqCtP,EAwBvB,CACnBuP,QAAS,KACTC,aAAc,CAAC,cACfC,UAAW,CAAC,WDHRhP,GAHN2I,ECrBoBuG,GDwBsBlP,UAAY,GACtDkG,OAAAC,OAAA,GAAYwC,EAAZ,CAAkB3I,SAAUsO,EAAWtO,EAAUwO,KAL5C,IACL7F,EACA6F,EAEMxO,KA4BAA,EAAWwO,GAHjB7F,ECnDsBzH,GDsDGlB,UAAY,ICtDrCkB,EDuDAgF,OAAAC,OAAA,GAAYwC,EAAZ,CAAkB3I,cClBb,SAAS6O,EACd3N,EADKiO,GAGL,IAAAnO,OAAA,IAAAmO,EAD0E,GAC1EA,EAAAC,EAAApO,EADE8N,eACF,IAAAM,EADY,KACZA,EAAAC,EAAArO,EADkB+N,oBAClB,IAAAM,EADiC,CAAC,cAClCA,EAAAC,EAAAtO,EADiDgO,iBACjD,IAAAM,EAD6D,CAAC,QAC9DA,EACMtP,EAAWkB,EAAKlB,SAASiJ,OAAO,SAACsF,EAAM5F,GAC3C,GAAIA,EAAKmG,UAAYA,EAAS,CAE5B,IAAMS,ED9BL,SAAsB5G,GAC3B,OAAOA,IAASA,EAAK6G,YAAc,IAAIjP,UC6BhBkP,CAAa9G,GAC1BpJ,EAAOmQ,EAAO,GAAAhC,OAAKsB,EAAL,CAAgBO,IAAa,IACjD,SAAA7B,OAAWa,EAAX,CAAiBmB,EAAO,GAAAhC,OAAKqB,EAAL,CAAmBQ,IAAa,CAAC5G,EAAMpJ,MAC1D,GAAIgP,EAAKE,OAEd,OAAOH,EAAWC,EAAM,SAAAoB,GAAI,OAAAzJ,OAAAC,OAAA,GACvBwJ,EADuB,CAE1B3P,SAAUsO,EAAWqB,EAAK3P,SAAU,SAAAT,GAAI,ODWzC,SAAqBoJ,EAAsBgG,GAChD,IAAM3O,EAAQ,GAAA0N,OAAQ/E,EAAK3I,UAAY,GAAzB,CAA8B2O,IAC5C,OAAAzI,OAAAC,OAAA,GAAYwC,EAAZ,CAAkB3I,aCbgCR,CAAYD,EAAMoJ,SAIhE,IAAMpJ,EAAOmQ,EAAQV,EAAW,CAACrG,IACjC,MAAO,CAAC+G,EAAQX,EAAc,CAACxP,MAEhC,IAEH,OAAA2G,OAAAC,OAAA,GAAYjF,EAAZ,CAAkBlB,aAOpB,SAAS0P,EAAQnP,EAAgCP,GAC/C,MAAO,CACL4P,KAAM,UACNd,QAAS,MACTU,WAAY,CAAEjP,aACdP,YCrEW,SAASsJ,EAAUlE,GAMhC,OAJAA,EAAUyK,IAAWhB,EAAQiB,IAAS1K,KAGtB2K,EAAU3K,GAvB5BqB,EAAAC,EAAAC,EAAA,sBAAA2C,IA+BO,IAAMyG,EAAY,IAAIC,IAAY,CACvC9Q,cAAeyB,IAAMzB,gBACpB+Q","file":"component---src-gatsby-templates-sheet-template-tsx-e510aea493403ba2c0ba.js","sourcesContent":["import debugjs from 'debug'\nimport React from 'react'\n\nimport { DisqusData } from '../../types/types'\n\nexport interface RenderProps {\n  thread: React.ReactNode\n  count: React.ReactNode\n}\n\nexport type Props = DisqusData & {\n  children?: (rprops: RenderProps) => React.ReactNode\n}\n\n/**\n * Disqus doesn't need to load right away.\n */\n\nconst DISQUS_DELAY = 100\n\nconst debug = debugjs('app:DisqusScript')\n\n/*\n * Injects a disqus script.\n */\n\nexport class DisqusScript extends React.Component<Props> {\n  componentDidMount() {\n    const { host, url, identifier } = this.props\n    debug('componentDidMount() started for \"%s\".', url)\n\n    setTimeout(() => {\n      // @ts-ignore\n      window.disqus_config = function() {\n        debug('Disqus has called window.disqus_config().')\n        // @ts-ignore\n        this.page.url = url\n        // @ts-ignore\n        this.page.identifier = identifier\n      }\n\n      injectScript(host)\n    }, DISQUS_DELAY)\n  }\n\n  render() {\n    const { host, url, identifier, children } = this.props\n    const data = { host, url, identifier }\n\n    // Render props to be passed on\n    const rprops: RenderProps = {\n      thread: <div id='disqus_thread' />,\n      count: (\n        <span\n          className='disqus-comment-count'\n          data-disqus-identifier={identifier}\n          data-disqus-url={url}\n        >\n          Comments\n        </span>\n      )\n    }\n\n    // @ts-ignore\n    return (\n      <React.Fragment>\n        {/* <noscript data> isn't standard HTML */}\n        {React.createElement('noscript', { data: JSON.stringify(data) })}\n        {typeof children === 'function' ? children(rprops) : null}\n      </React.Fragment>\n    )\n  }\n}\n\n/*\n * Primary export\n */\n\nexport default DisqusScript\n\n/**\n * Injects disqus's scripts into the page.\n *\n * @example\n *     inject('devhints.disqus.com')\n */\n\nexport function injectScript(host: string) {\n  debug('injectScript(\"%s\") called', host)\n  injectEmbed(host)\n  injectCount(host)\n}\n\nexport function injectEmbed(host: string) {\n  const s = document.createElement('script')\n  s.src = `https://${host}/embed.js`\n  s.setAttribute('data-timestamp', `#{+new Date()}`)\n  const parent = document.head || document.body\n  if (parent) parent.appendChild(s)\n}\n\nexport function injectCount(host: string) {\n  const s = document.createElement('script')\n  s.src = `https://${host}/count.js`\n  s.id = 'dsq-count-scr'\n  s.async = true\n  const parent = document.head || document.body\n  if (parent) parent.appendChild(s)\n}\n","import cn from 'classnames'\nimport React from 'react'\nimport { talkBubblesLine, talkBubblesSolid } from '../../web-icons'\nimport CSS from './CommentsAreaSummary.module.scss'\n\ninterface Props {\n  count: React.ReactNode\n}\n\n/**\n * Summary in the comments area\n */\n\nexport const CommentsAreaSummary = ({ count }: Props) => (\n  <summary className={CSS.root}>\n    <i\n      className={cn(CSS.icon, CSS.isLine)}\n      dangerouslySetInnerHTML={{ __html: talkBubblesLine }}\n    />\n    <i\n      className={cn(CSS.icon, CSS.isSolid)}\n      dangerouslySetInnerHTML={{ __html: talkBubblesSolid }}\n    />\n    <strong className={CSS.count}>{count}</strong>{' '}\n    <span className={CSS.suffix}>for this cheatsheet.</span>{' '}\n    <span className={CSS.fauxlink}>Write yours!</span>\n  </summary>\n)\n\nexport default CommentsAreaSummary\n","import React from 'react'\n\nexport interface Props {\n  thread: React.ReactNode\n}\n\nconst CommentsSection = ({ thread }: Props) => {\n  return (\n    <div className='comments-section'>\n      {/* TODO comments-section CSS module */}\n      <div className='comments'>{thread}</div>\n    </div>\n  )\n}\n\nexport default CommentsSection\n","import React from 'react'\nimport { DisqusData } from '../../types/types'\nimport DisqusScript from '../providers/DisqusScript'\nimport { RenderProps } from '../providers/DisqusScript'\nimport CSS from './CommentsArea.module.scss'\nimport CommentsAreaSummary from './CommentsAreaSummary'\nimport CommentsSection from './CommentsSection'\n\nexport interface ViewProps {\n  thread: React.ReactNode\n  count: React.ReactNode\n}\n\n/**\n * Comments area\n */\n\nexport const CommentsAreaView = (props: ViewProps) => {\n  const { thread, count } = props\n\n  return (\n    <section className={CSS.root} id='comments' data-js-no-preview>\n      <div className={CSS.container}>\n        <details className={CSS.details}>\n          <CommentsAreaSummary count={count} />\n          <CommentsSection {...props} />\n        </details>\n      </div>\n    </section>\n  )\n}\n\n/*\n * Connector\n */\n\nexport const CommentsArea = () => {\n  // Disqus configuration\n  const disqus: DisqusData = {\n    host: 'devhints.disqus.com',\n    url: 'https://devhints.io/react',\n    identifier: 'react'\n  }\n\n  return (\n    <DisqusScript {...disqus}>\n      {({ thread, count }: RenderProps) => {\n        return <CommentsAreaView {...{ thread, count }} />\n      }}\n    </DisqusScript>\n  )\n}\n\n/*\n * Export\n */\n\nexport default CommentsArea\n","import cn from 'classnames'\nimport React from 'react'\nimport CSS from './IntroContent.module.scss'\n\nexport interface Props {\n  children: React.ReactNode\n  className?: string\n}\n\n/**\n * Intro content just below the cheatsheet title\n */\n\nexport const IntroContent = ({ children, className }: Props) => (\n  <div className={cn(CSS.root, className)}>{children}</div>\n)\n\n/*\n * Export\n */\n\nexport default IntroContent\n","import React from 'react'\n\nexport interface Props {\n  title: string\n  suffix: string\n}\n\n/**\n * Main heading\n */\n\nconst MainHeading = ({ title, suffix }: Props) => (\n  <header className='main-heading -center'>\n    <h1 className='h1'>\n      {title} <em>{suffix}</em>\n    </h1>\n\n    <div className='adbox' />\n  </header>\n)\n\nexport default MainHeading\n","import React from 'react'\n\nexport interface Props {\n  // The markdown source\n  source: string\n}\n\n/**\n * Renders mini-Markdown as HTML. Supports a subset of Markdown.\n *\n * @example\n *     <MiniMarkdown source='hello, *world*!' />\n */\n\nexport const MiniMarkdown = ({ source }: Props) => (\n  <span\n    className='mini-markdown'\n    dangerouslySetInnerHTML={{ __html: paragraphify(markdownish(source)) }}\n  />\n)\n\n/**\n * A very simply markdown-to-HTML converter, but only works with a very small\n * subset of inline elements. Returns HTML.\n *\n * @example\n *     markdownish('hello *world*')\n *     // => 'hello <em>world</em>'\n */\n\nexport function markdownish(source: string): string {\n  return (\n    source\n      // Code\n      .replace(\n        /`(.*?)`/g,\n        (_, label: string) => `<code>${markdownish(label)}</code>`\n      )\n      // Bold\n      .replace(\n        /\\*\\*(.*?)\\*\\*/g,\n        (_, label: string) => `<strong>${markdownish(label)}</strong>`\n      )\n      // Link\n      .replace(\n        /\\[([^\\]]*)\\]\\((.*?)\\)/g,\n        (_, label: string, url: string) =>\n          `<a href=${s(url)}>${markdownish(label)}</a>`\n      )\n  )\n}\n\n/**\n * Splits paragraph sections into `<p>` elements.\n * Returns HTML.\n *\n * @example\n *     paragraphify('hello\\n\\nthere')\n *     // => '<p>hello</p><p>there</p>'\n */\n\nexport function paragraphify(source: string): string {\n  return source\n    .split('\\n\\n')\n    .map(para => `<p>${para}</p>`)\n    .join('')\n}\n\n/**\n * Quotes a string.\n * @private\n */\n\nfunction s(str: string) {\n  return JSON.stringify(str)\n}\n\nexport default MiniMarkdown\n","import React from 'react'\nimport CSS from './PreFooter.module.scss'\n\n/**\n * Pre-footer separator in the cheatsheets page\n */\n\nexport const PreFooter = () => (\n  <div className={CSS.root}>\n    <i className={CSS.icon} />\n  </div>\n)\n\nexport default PreFooter\n","import cn from 'classnames'\nimport React from 'react'\nimport { searchLine } from '../web-icons'\nimport LiveSearchInput from './LiveSearchInput'\nimport CSS from './SearchBox.module.css'\n\nconst SearchBox = () => {\n  return (\n    <label className={cn(CSS.root, CSS.isSmall)}>\n      <span className={CSS.prefix}>devhints.io</span>\n      <span className={CSS.sep}>/</span>\n\n      <LiveSearchInput placeholder='Search 360+ cheatsheets' />\n\n      <i\n        className={CSS.icon}\n        dangerouslySetInnerHTML={{ __html: searchLine }}\n      />\n    </label>\n  )\n}\n\nexport default SearchBox\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { homeLine } from '../../web-icons'\nimport CSS from './HomeButton.module.scss'\n\n/**\n * Home button\n */\n\nexport const HomeButton = () => (\n  <Link className={CSS.root} to='/'>\n    <i className={CSS.icon} dangerouslySetInnerHTML={{ __html: homeLine }} />\n  </Link>\n)\n\n/*\n * Export\n */\n\nexport default HomeButton\n","import React from 'react'\nimport SearchBox from '../../web-search/SearchBox'\nimport HomeButton from './HomeButton'\nimport CSS from './SearchFooterSection.module.scss'\n\nconst SearchFooterSection = () => (\n  <section className={CSS.root}>\n    <div className={CSS.search}>\n      <form action='/' method='get'>\n        <SearchBox />\n      </form>\n    </div>\n\n    <div className={CSS.links}>\n      <HomeButton />\n    </div>\n  </section>\n)\n\nexport default SearchFooterSection\n","import React from 'react'\nimport CSS from './SearchFooter.module.scss'\nimport SearchFooterSection from './SearchFooterSection'\n\n/**\n * Search footer in the cheatsheets page.\n */\n\nconst SearchFooter = () => (\n  <aside className={CSS.root} data-js-no-preview>\n    <div className={CSS.container}>\n      <SearchFooterSection />\n    </div>\n  </aside>\n)\n\nexport default SearchFooter\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport useSiteContent from '../../gatsby-hooks/useSiteContent'\nimport { useSheetContext } from '../../gatsby-templates/SheetTemplate'\n\n// Components\nimport CommentsArea from './CommentsArea'\nimport CommonHead from './CommonHead'\nimport IntroContent from './IntroContent'\nimport MainHeading from './MainHeading'\nimport MiniMarkdown from './MiniMarkdown'\nimport PostContent from './PostContent'\nimport PreFooter from './PreFooter'\nimport RelatedPostsArea from './RelatedPostsArea'\nimport SearchFooter from './SearchFooter'\nimport TopNav from './TopNav'\n\n/**\n * Sheet template.\n */\n\nexport const SheetTemplateView = () => {\n  const content = useSiteContent()\n  const ctx = useSheetContext()\n  if (!ctx) return null\n\n  const { sheet, frontmatter } = ctx\n  const { path, pageCount } = ctx\n  const { htmlAst } = sheet\n\n  // Related links and stuff\n  const { relatedPages, topPages } = ctx\n\n  // Sheet title\n  const title = sheet.title || ''\n\n  // UI micro-labels\n  const labels = { sheetSuffix: content.sheet.suffix }\n\n  // \"Vim is a text editor...\" introduction\n  const intro = frontmatter && frontmatter.intro\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${title} ${labels.sheetSuffix}`}</title>\n      </Helmet>\n\n      {/* Nav */}\n      <CommonHead />\n      <TopNav back title={title} path={path} />\n\n      <div className='body-area'>\n        <MainHeading title={title} suffix={labels.sheetSuffix} />\n\n        {/* Introduction */}\n        {intro ? (\n          <IntroContent className='MarkdownBody'>\n            <MiniMarkdown source={intro} />\n          </IntroContent>\n        ) : null}\n\n        {/* Post content */}\n        <PostContent className='post-content MarkdownBody' {...{ htmlAst }} />\n      </div>\n\n      {/* Comments area */}\n      <PreFooter />\n      <CommentsArea />\n\n      {/* Search & related posts footer */}\n      <SearchFooter />\n      <RelatedPostsArea\n        {...{\n          pageCount,\n          relatedPages,\n          topPages,\n          category: frontmatter.category\n        }}\n      />\n    </>\n  )\n}\n\nexport default SheetTemplateView\n","import { graphql } from 'gatsby'\nimport React, { useContext } from 'react'\n\nimport {\n  AllSitePage,\n  Frontmatter,\n  MarkdownNode,\n  NodeContext,\n  Sheet,\n  SiteLink\n} from '../types/types'\nimport SheetTemplateView from '../web/components/SheetTemplateView'\nimport Layout from '../web/containers/Layout'\nimport { toSiteLinks } from '../web/lib/site_page'\n\n/**\n * Props\n */\n\nexport interface Data {\n  relatedPages: AllSitePage\n  topPages: AllSitePage\n  allPages: { totalCount: number }\n  markdownRemark: MarkdownNode\n}\n\nexport interface Props {\n  pageContext: NodeContext\n  data: Data\n}\n\nexport interface ContextType {\n  sheet: Sheet\n  frontmatter: Frontmatter\n  topPages: SiteLink[]\n  relatedPages: SiteLink[]\n  path: string\n  pageCount: number\n}\n\nconst SheetContext = React.createContext<ContextType | null>(null)\n\n/**\n * Sheet template\n */\n\nconst SheetTemplate = (props: Props) => {\n  const assigns = useAssigns(props)\n\n  return (\n    <SheetContext.Provider value={assigns}>\n      <Layout>\n        <SheetTemplateView />\n      </Layout>\n    </SheetContext.Provider>\n  )\n}\n\nconst useAssigns = (props: Props) => {\n  // Data provided by GraphQL\n  const data = props.data\n\n  // The current page's path\n  const nodePath = props.pageContext.nodePath\n\n  // Links\n  const relatedPages: SiteLink[] = toSiteLinks(data.relatedPages)\n  const topPages: SiteLink[] = toSiteLinks(data.topPages)\n\n  // Frontmatter in the YAML\n  const frontmatter = data.markdownRemark.frontmatter\n\n  // Data for the current sheet\n  const sheet: Sheet = {\n    path: nodePath,\n    title: frontmatter.title,\n    htmlAst: data.markdownRemark.htmlAst\n  }\n\n  return {\n    sheet,\n    frontmatter,\n    topPages,\n    relatedPages,\n    path: nodePath,\n    pageCount: data.allPages.totalCount\n  }\n}\n\nconst useSheetContext = () => {\n  return useContext(SheetContext)\n}\n\nexport { useSheetContext }\nexport default SheetTemplate\n\n/*\n * Query\n */\n\nexport const query = graphql`\n  query SheetByNodeId($node_id: String!, $category: String!, $path: String!) {\n    markdownRemark(id: { eq: $node_id }) {\n      htmlAst\n      frontmatter {\n        title\n        category\n        intro\n      }\n    }\n\n    # Pages related to the current one\n    # (ie, same category)\n    relatedPages: allSitePage(\n      filter: {\n        context: {\n          nodePath: { ne: $path }\n          category: { eq: $category }\n          nodeType: { eq: \"sheet\" }\n        }\n      }\n      limit: 6\n      sort: { fields: [context___weight], order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          context {\n            nodePath\n            category\n            title\n          }\n        }\n      }\n    }\n\n    # The top pages\n    topPages: allSitePage(\n      filter: {\n        context: { nodePath: { ne: $path }, nodeType: { eq: \"sheet\" } }\n      }\n      limit: 6\n      sort: { fields: [context___weight], order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          context {\n            nodePath\n            category\n            title\n          }\n        }\n      }\n    }\n\n    # Number of total cheatsheets\n    allPages: allSitePage {\n      totalCount\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\n/**\n * Props\n */\n\nexport interface Props {\n  children: React.ReactNode\n}\n\n/**\n * Base layout\n */\n\nfunction Layout({ children }: Props) {\n  return (\n    <>\n      <Helmet\n        title='Devhints.io'\n        meta={[\n          // TODO meta tags for sheets\n          { name: 'description', content: 'Sample' },\n          { name: 'keywords', content: 'sample, something' }\n        ]}\n      />\n      {children}\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport './CommonHead.css'\n\n/**\n * Things that should be in all pages\n */\n\nexport const CommonHead = () => (\n  <Helmet>\n    <link\n      rel='stylesheet'\n      href='https://fonts.googleapis.com/css?family=Cousine'\n    />\n  </Helmet>\n)\n\nexport default CommonHead\n","import groupBy from 'group-by'\nimport {\n  AllSitePage,\n  GroupedSiteLinks,\n  PageEdge,\n  SiteLink\n} from '../../types/types'\n\n/**\n * Converts AllSitePage to SiteLinks\n */\n\nexport function toSiteLinks(pages?: AllSitePage): SiteLink[] {\n  if (!pages || !pages.edges) return []\n\n  return pages.edges.map(toSiteLink)\n}\n\n/**\n * Convert an edge to a site link\n */\n\nexport function toSiteLink(edge: PageEdge): SiteLink {\n  return {\n    path: edge.node.context.nodePath,\n    title: edge.node.context.title\n  }\n}\n\n/**\n * Groups by category, returns sitelinks\n */\n\nexport function groupByCategory(allPages: AllSitePage): GroupedSiteLinks {\n  const groups: { [key: string]: PageEdge[] } = groupBy(\n    allPages.edges,\n    (edge: PageEdge) => edge.node.context.category\n  )\n\n  return Object.keys(groups).reduce((result, group: string) => {\n    const edges = groups[group]\n    return { ...result, [group]: edges.map(toSiteLink) }\n  }, {})\n}\n","import debugjs from 'debug'\nimport React from 'react'\nimport isotopify from './isotopify'\nimport { loadPrism, PrismType } from './prism'\nimport transform from './transform'\n\nconst debug = debugjs('app:PostContent')\n\n// @ts-ignore React.memo isn't typed? Why?\nconst memo = React.memo\n\nexport interface Props {\n  // Markdown HAST syntax tree\n  htmlAst: any\n\n  // Class name of the <div>\n  className: string\n}\n\n/**\n * Post content with transform magic.\n */\n\nconst PostContent = memo((props: Props) => {\n  const { htmlAst, className } = props\n  const content = transform(htmlAst)\n\n  return (\n    <div className={className} role='main' ref={doPostTransform}>\n      {content}\n    </div>\n  )\n})\n\nexport default PostContent\n\n/**\n * Asynchronously performs transformations needed after rendering.\n * @returns a Promise that resolves to nothing.\n */\n\nfunction doPostTransform(element: HTMLElement | null | void): Promise<void> {\n  const log = debug.bind(null, 'doPostTransform()')\n  log('working on', element)\n\n  return Promise.resolve()\n    .then(() => {\n      if (!element) {\n        // @ts-ignore - Prism polutes the global namespaec\n        return global.Prism\n      }\n      log('Invoking Isotope')\n      isotopify(element)\n\n      return loadPrism(element)\n    })\n    .then((Prism: PrismType) => {\n      if (element) {\n        log('Highlighting via Prism')\n        Prism.highlightAllUnder(element)\n      }\n    })\n    .catch((error: Error) => {\n      log('Prism/isotope error:', error)\n    })\n}\n","/**\n * Lays out each h3-section using Isotope.\n */\n\nexport default function isotopify(el: HTMLElement | null | void) {\n  if (!el || !el.children) return\n\n  // If we're running on the server, don't bother with this\n  if (typeof window === 'undefined') return\n\n  // There's a wrapping <div> from renderAst, meh\n  const div = el.children[0]\n  if (!div) return\n\n  // isotope()'ify all lists\n  const lists = div.querySelectorAll<HTMLElement>('.h3-section-list')\n  Array.from(lists).forEach(isotopifyItem)\n}\n\n/**\n * Applies an Isotope layout to the given HTML element `el`'s H3 sections.\n */\n\nfunction isotopifyItem(el: HTMLElement) {\n  // Load this lazily, so that it doesn't happen on the server\n  const Isotope = require('isotope-layout/dist/isotope.pkgd.js')\n\n  const iso = new Isotope(el, {\n    itemSelector: '.h3-section',\n    transitionDuration: 0\n  })\n\n  const images = el.querySelectorAll('img')\n\n  Array.from(images).forEach(image => {\n    image.addEventListener('load', () => {\n      iso.layout()\n    })\n  })\n\n  // Insurance against weirdness on pages like devhints.io/vim, where the\n  // critical path CSS may look different from the final CSS (because of the\n  // tables).\n  window.addEventListener('load', () => {\n    iso.layout()\n  })\n}\n","import debugjs from 'debug'\nimport loadjs from 'loadjs'\n\nconst debug = debugjs('app:Prism')\n\n/*\n * Type for window.Prism.\n * Consider later using @types/prismjs or something\n */\n\nexport interface PrismType {\n  highlightAllUnder: (el: HTMLElement) => void\n}\n\n/**\n * Version of Prism.js to load from CDN\n */\n\nexport const PRISM_VERSION = '1.14.0'\n\n/**\n * Map of language codes to prism plugin names.\n * See: https://cdn.jsdelivr.net/npm/prismjs/components/\n */\n\nexport const LANGUAGE_ALIASES: { [id: string]: string } = {\n  coffee: 'coffeescript',\n  dockerfile: 'docker',\n  dosini: 'ini',\n  jade: 'pug',\n  js: 'javascript',\n  make: 'makefile',\n  md: 'markdown',\n  rb: 'ruby',\n  sh: 'bash',\n  tsx: 'jsx',\n  vimscript: 'vim',\n  yml: 'yaml',\n  zsh: 'bash'\n}\n\n/**\n * These languages don't exist (or are built in), don't load them\n */\n\nexport const LANGUAGE_IGNORE: { [key: string]: boolean } = {\n  nohighlight: true,\n  html: true\n}\n\n/**\n * Asynchrolously loads Prism, the syntax highlighter.\n * If `el` is given, it tries to infer all the languages used in code blocks\n * inside that element.\n *\n * @returns a Promise that resolves into the `Prism` instance.\n *\n * @example\n *     const Prism = await loadPrism()\n */\n\nexport function loadPrism(el?: HTMLElement): Promise<PrismType> {\n  return Promise.resolve()\n    .then(() => {\n      const urls = getPrismURLs(el)\n      debug('loadPrism() → Loading URLs', urls)\n      return loadScripts(urls)\n    })\n    .then(() => {\n      // @ts-ignore global.Prism\n      return global.Prism as PrismType\n    })\n}\n\n/**\n * Returns JS and CSS URLs to load.\n * If an `element` is given, it tries to detect what languages are in use in\n * that element.\n */\n\nexport function getPrismURLs(el?: HTMLElement): string[] {\n  const languages = getLanguagesInElement(el)\n  const languageURLs = languages.map((lang: string) => getLanguageURL(lang))\n\n  return [\n    // @ts-ignore global.Prism\n    ...(global.Prism ? [] : [getPrismURL()]),\n    getPrismURL('plugins/line-highlight/prism-line-highlight.min.js'),\n    getPrismURL('plugins/line-highlight/prism-line-highlight.min.css'),\n    ...languageURLs\n  ]\n}\n\n/**\n * Loads multiple scripts asynchronously.\n */\n\nexport function loadScripts(urls: string[]): Promise<void> {\n  return Promise.all(urls.map((url: string) => loadScript(url))).then(noop)\n}\n\n/**\n * Loads a script asynchronously.\n */\n\nexport function loadScript(url: string): Promise<void> {\n  return new Promise(resolve => {\n    loadjs(url, {\n      // @ts-ignore - because @types/loadjs is whack\n      before: (path: string, el: HTMLElement) => {\n        // Prism wants this so that it doesn't automatically do magic.\n        el.setAttribute('data-manual', '')\n\n        // Don't halt HTML processing!\n        el.setAttribute('defer', '')\n        el.removeAttribute('async')\n      },\n      success: () => {\n        resolve()\n      },\n      error: (err: Error) => {\n        // Probably a 404 or network error or something, no need to panic. It\n        // won't cause any trouble, so fail silently.\n        debug('loadScript() error:', err)\n        resolve()\n      }\n    })\n  })\n}\n\n/**\n * Returns the CDN URL for a given language plugin.\n *\n * @example\n *     getLanguageURL('javascript')\n *     // => 'https://cdn.jsdelivr.net/npm/prismjs@1.14.0/components/prism-javascript.min.js'\n */\n\nexport function getLanguageURL(lang: string): string {\n  return getPrismURL(`components/prism-${lang}.min.js`)\n}\n\n/**\n * Returns the CDN URL for a given prism `file`.\n *\n * @example\n *     getPrismURL()\n *     // => 'https://cdn.jsdelivr.net/npm/prismjs@1.14.0/prism.min.js'\n *\n *     getPrismURL('package.json')\n *     // => 'https://cdn.jsdelivr.net/npm/prismjs@1.14.0/package.json'\n */\n\nexport function getPrismURL(file: string = 'prism.min.js'): string {\n  return `https://cdn.jsdelivr.net/npm/prismjs@${PRISM_VERSION}/${file}`\n}\n\n/**\n * Returns languages used in an element.\n * @returns an list of languages as an array of strings.\n *\n * @example\n * Assuming the body has `<pre class='language-jsx'>` (and alike for\n * `javascript` and `ruby`), `getLanguagesInElement()` will return those\n * languages.\n *\n *     getLanguagesInElement(document.body)\n *     // => ['jsx', 'javascript', 'ruby']\n */\n\nexport function getLanguagesInElement(el?: HTMLElement): string[] {\n  // Just being defensive\n  if (!el) {\n    return []\n  }\n\n  const pres = el.querySelectorAll<HTMLElement>('[class*=\"language-\"]')\n\n  // Get classnames\n  let classNames\n  classNames = Array.from(pres).map((pre: HTMLElement) =>\n    Array.from(pre.className.split(' ')).find(\n      (cn: string) => !!cn.match(/^language-/)\n    )\n  )\n\n  // Ensure there aren't any null's\n  classNames = classNames.filter(Boolean) as string[]\n\n  const result = classNames\n    // Only work on the language-* classes\n    .map((cn: string) => cn.replace(/^language-/, ''))\n\n    // Resolve to its canonical version (rb => ruby)\n    .map((cn: string) => LANGUAGE_ALIASES[cn] || cn)\n\n    // Sort and dedeplicate\n    .sort()\n    .filter((value, index, self) => self.indexOf(value) === index)\n\n    // Ignore certain ones\n    .filter((cn: string) => !LANGUAGE_IGNORE[cn])\n\n  return result\n}\n\n/**\n * Function to neutralize a promise's return value.\n *\n * @example\n *     Promise.all(...).then(noop)\n */\n\nfunction noop() {\n  // Return undefined\n}\n","// @flow\n\n/*::\n  export type HastType = 'comment' | 'element' | 'text'\n\n  export type HastNode = {\n    type: HastType,\n    tagName?: string,\n    value?: string,\n    properties: Object,\n    children?: HastNodeList\n  }\n\n  export type HastNodeList = Array<HastNode>\n*/\n\n// htmlAst = {\n//   type: 'element'\n//   tagName: 'h2'\n//   properties: {}\n//   children: []\n// }\n// { type: 'comment', value: 'sup' }\n// { type: 'text', value: 'hello' }\n\n/**\n * Returns the class name of a HAST node.\n */\n\nexport function getClassName(node /*: HastNode */) {\n  return node && (node.properties || {}).className\n}\n\n/**\n * Updates the last child of a HAST node.\n */\n\nexport function updateLastChild(\n  node /*: HastNode */,\n  fn /*: HastNode => HastNode */\n) {\n  const children /*: HastNodeList */ = node.children || []\n  return { ...node, children: updateLast(children, fn) }\n}\n\n/**\n * Updates the last item on a list with a given `fn` function.\n */\n\nexport function updateLast(\n  list /*: HastNodeList */,\n  fn /*: HastNode => HastNode */\n) {\n  if (list.length === 0) {\n    return []\n  }\n  const head /*: HastNodeList */ = list.slice(0, list.length - 1)\n  const item /*: HastNode */ = list[list.length - 1]\n  return [...head, fn(item)]\n}\n\n/**\n * Updates the `children` of a HAST node.\n */\n\nexport function updateChildren(\n  node /*: HastNode */,\n  fn /*: HastNodeList => HastNodeList */\n) {\n  const children = fn(node.children || [])\n  return { ...node, children }\n}\n\n/**\n * Adds a child to a HAST node.\n */\n\nexport function appendChild(node /*: HastNode */, item /*: HastNode */) {\n  const children = [...(node.children || []), item]\n  return { ...node, children }\n}\n","import {\n  getClassName,\n  updateLastChild,\n  updateLast,\n  updateChildren,\n  appendChild\n} from './lib/helpers/hast'\n\n/**\n * Wrap everything.\n */\n\nexport default function(root) {\n  root = wrapH2(root)\n\n  root = updateChildren(root, children =>\n    (children || []).map(section =>\n      updateLastChild(section, body => wrapH3(body))\n    )\n  )\n\n  return root\n}\n\n/**\n * Wrap H2 headings.\n */\n\nexport function wrapH2(root) {\n  return wrapify(root, {\n    tagName: 'h2',\n    sectionClass: ['h2-section'],\n    bodyClass: ['body', 'h3-section-list']\n  })\n}\n\n/**\n * Wraps H3 headings.\n */\n\nexport function wrapH3(root) {\n  return wrapify(root, {\n    tagName: 'h3',\n    sectionClass: ['h3-section'],\n    bodyClass: ['body']\n  })\n}\n\n/**\n * Wraps headings.\n */\n\nexport function wrapify(\n  root,\n  { tagName = 'h2', sectionClass = ['h2-section'], bodyClass = ['body'] } = {}\n) {\n  const children = root.children.reduce((list, node) => {\n    if (node.tagName === tagName) {\n      // H2 heading - create a new `.h2-section`.\n      const extraClass = getClassName(node)\n      const body = wrapper([...bodyClass, extraClass], [])\n      return [...list, wrapper([...sectionClass, extraClass], [node, body])]\n    } else if (list.length) {\n      // Not prelude\n      return updateLast(list, last => ({\n        ...last,\n        children: updateLast(last.children, body => appendChild(body, node))\n      }))\n    } else {\n      // Prelude\n      const body = wrapper(bodyClass, [node])\n      return [wrapper(sectionClass, [body])]\n    }\n  }, [])\n\n  return { ...root, children }\n}\n\n/**\n * Creates a wrapper element.\n */\n\nfunction wrapper(className /*: Array<string> */, children /*: HastNodeList */) {\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: { className },\n    children\n  }\n}\n","import React from 'react'\n// @ts-ignore TODO types for rehype-decorate\nimport decorate from 'rehype-decorate'\n// @ts-ignore TODO types for rehype-react\nimport RehypeReact from 'rehype-react'\n// @ts-ignore TODO types for rehype-table-separators\nimport separatify from 'rehype-table-separators'\n// @ts-ignore TODO types for rehype-wrapify\nimport wrapify from '../../../rehype-wrapify'\nimport { HastNode } from '../../../types/types'\n\n/**\n * Converts a HAST node (generated from Markdown) into a React element.\n * Does the appropriate transformations.\n *\n * @returns a React Element.\n */\n\nexport default function transform(htmlAst: HastNode): React.ReactNode {\n  // Perform transformations\n  htmlAst = separatify(wrapify(decorate(htmlAst)))\n\n  // Convert to React\n  const element = renderAst(htmlAst)\n  return element\n}\n\n/**\n * Renders HAST into React using `rehype-react`.\n */\n\nexport const renderAst = new RehypeReact({\n  createElement: React.createElement\n}).Compiler\n"],"sourceRoot":""}